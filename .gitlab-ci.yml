variables:
  REGISTRY_IMAGE: ${HARBOR_REGISTRY}/nxa/nxa-open-api
  DOCKER_TLS_CERTDIR: "/certs"
  T11_REMOTE_HOST: 13.49.28.32

stages:
  - build
  - deploy

Build-nxa-open-api:
  image: docker:19.03.12
  services:
    - docker:19.03.12-dind
  stage: build
  tags:
    - docker
    - build
  before_script:
    - echo $HARBOR_USERNAME
    - echo $HARBOR_REGISTRY
    - echo -n $HARBOR_PASSWORD | docker login -u $HARBOR_USERNAME --password-stdin $HARBOR_REGISTRY
  after_script:
    - docker logout $HARBOR_REGISTRY
  script:
    - apk update && apk add git make
    - docker pull $REGISTRY_IMAGE:latest || true
    - >
      docker build -f Dockerfile
      --pull
      --cache-from $REGISTRY_IMAGE:latest
      --tag $REGISTRY_IMAGE:$CI_COMMIT_SHA
      --tag $REGISTRY_IMAGE:latest
      .
    - docker push $REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $REGISTRY_IMAGE:latest

T11_reDeploy:
  image: ubuntu
  stage: deploy
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -

    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh

    - ssh-keyscan $T11_REMOTE_HOST >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  tags:
  - docker
  - build
  script:
  #
  - ssh ubuntu@$T11_REMOTE_HOST "echo -n $HARBOR_PASSWORD | docker login -u $HARBOR_USERNAME --password-stdin $HARBOR_REGISTRY"
  #
  - scp ./aws/docker-compose.yml ubuntu@$T11_REMOTE_HOST:~/docker-compose/
  - scp ./.env ubuntu@$T11_REMOTE_HOST:~/docker-compose/
  - ssh ubuntu@$T11_REMOTE_HOST "ls; pwd;"
  - ssh ubuntu@$T11_REMOTE_HOST "cd docker-compose/; source .env; docker-compose down || true"
  - ssh ubuntu@$T11_REMOTE_HOST "cd docker-compose/; source .env; docker-compose pull"
  - ssh ubuntu@$T11_REMOTE_HOST "cd docker-compose/; source .env; docker-compose up --force-recreate -d"
